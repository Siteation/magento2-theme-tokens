<?php declare(strict_types=1);

/**
 * @author Siteation (https://siteation.dev/)
 * @copyright Copyright 2023 Siteation (https://siteation.dev/)
 * @license MIT
 */

use Magento\Framework\View\Element\Template;
use Magento\Framework\Escaper;

/** @var Template $block */
/** @var Escaper $escaper */
?>

<label class="themetokens-file-upload action action-default action-secondary">
    <input id="siteation_themetokens_file_upload" type="file" accept=".css,.json">
    <span><?= $escaper->escapeHtml(__('Import Tokens')) ?></span>
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4" />
        <polyline points="14 2 14 8 20 8" />
        <path d="M4 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1" />
        <path d="M8 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1" />
    </svg>
</label>
<style>
    #siteation_themetokens_general_tokens {
        min-height: 320px
    }

    .themetokens-file-upload {
        display: inline-flex;
        justify-content: space-between;
        align-items: center;
        gap: 0.5em;
        -webkit-appearance: button;
        appearance: button;
        cursor: pointer;
    }

    .themetokens-file-upload:focus-within {
        outline: 2px solid #007bdb;
        outline-offset: 1px;
    }

    .themetokens-file-upload > input {
        position: absolute;
        width: 1px;
        height: 1px;
        margin: -1px;
        white-space: nowrap;
        overflow: hidden;
        clip-path: inset(50%);
    }
</style>
<script>
    const fileSyntax = document.getElementById('siteation_themetokens_general_token_syntax');
    const fileUpload = document.getElementById('siteation_themetokens_file_upload');
    const fileContent = document.getElementById('siteation_themetokens_general_tokens');
    const fileContentInherit = document.getElementById('siteation_themetokens_general_tokens_inherit');
    const themetokensMaxlength = 12000;

    function setPlaceholder(syntax) {
        if (syntax === "design_system") {
            return `{\n\t"color": {\n\t\t"primary": {\n\t\t\t"lighter": {\n\t\t\t\t"value": "20 80% 64%",\n\t\t\t\t"type": "color"\n\t\t\t},\n\t\t\t"default": {\n\t\t\t\t"value": "20 80% 50%",\n\t\t\t\t"type": "color"\n\t\t\t}\n\t\t}\n\t}\n}`
        }

        if (syntax === "json") {
            return `{\n\t"color": {\n\t\t"primary": {\n\t\t\t"lighter": "hsl(20 80% 64%)",\n\t\t\t"default": "hsl(20 80% 50%)",\n\t\t\t"darker": "hsl(20 80% 34%)"\n\t\t}\n\t}\n}`
        }

        return `--color-primary-lighter: hsl(20 80% 64%);\n--color-primary: hsl(20 80% 50%);\n--color-primary-darker: hsl(20 80% 34%);`
    }

    fileContent.setAttribute('spellcheck', false);
    fileContent.setAttribute('placeholder', setPlaceholder(fileSyntax.value));
    fileContent.setAttribute('maxlength', themetokensMaxlength);

    if (fileContent.disabled) {
        fileUpload.parentNode.classList.add('disabled')
    }

    if (fileContentInherit) {
        fileContentInherit.addEventListener('input', function(e) {
            fileUpload.parentNode.classList.toggle('disabled', e.target.checked);
        })
    }

    fileSyntax.addEventListener('input', function(e) {
        fileContent.setAttribute('placeholder', setPlaceholder(e.target.value));
    });

    fileUpload.addEventListener('change', function() {
        const file = fileUpload.files[0];
        const reader = new FileReader();
        reader.onload = function(e) {
            const content = e.target.result;
            fileContent.textContent = content.trim();
        };
        reader.readAsText(file);
        fileUpload.value = null;
    });
</script>
